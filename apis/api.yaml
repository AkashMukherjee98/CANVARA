openapi: 3.0.0
info:
  title: Canvara Backend API
  version: 0.3.1
servers: []
tags:
  - name: applications
  - name: customers
  - name: matches
  - name: onboarding
  - name: posts
  - name: users
paths:
  /customers:
    get:
      summary: List all customers
      tags:
        - customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
              examples: {}
      operationId: list_customers
      description: ''
      security:
        - AWSCognitoCanvaraPrototype: []
    post:
      summary: Add a new customer
      tags:
        - customers
      operationId: create_customer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
  '/customers/{customer_id}':
    parameters:
      - schema:
          type: string
        name: customer_id
        in: path
        required: true
    get:
      summary: Get customer details
      tags:
        - customers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
      operationId: get_customer
      security:
        - AWSCognitoCanvaraPrototype: []
    delete:
      summary: Delete a customer
      tags:
        - customers
      operationId: delete_customer
      responses:
        '200':
          description: OK
      security:
        - AWSCognitoCanvaraPrototype: []
  '/customers/{customer_id}/users':
    parameters:
      - schema:
          type: string
        name: customer_id
        in: path
        required: true
    get:
      summary: List all users for a customer
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      operationId: list_users
      security:
        - AWSCognitoCanvaraPrototype: []
    post:
      summary: Add a new user for a customer
      tags:
        - users
      operationId: create_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                name:
                  type: string
                title:
                  type: string
                profile_picture_url:
                  type: string
                current_skills:
                  type: array
                  items:
                    $ref: '#/components/schemas/SkillWithLevel'
                desired_skills:
                  type: array
                  items:
                    $ref: '#/components/schemas/Skill'
                linkedin_url:
                  type: string
              required:
                - user_id
                - name
  /posts:
    get:
      summary: List all posts
      tags:
        - posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
      operationId: list_posts
      security:
        - AWSCognitoCanvaraPrototype: []
      parameters:
        - schema:
            type: string
          in: query
          name: post_owner_id
          description: Unique identifier of the post owner.
        - schema:
            type: string
          in: query
          name: q
          description: The search query.
        - schema:
            type: string
            default: curated
          in: query
          name: filter
          description: Filter for the results.
        - schema:
            type: string
          in: query
          name: type
          description: 'Unique identifier of the post type for search for. If absent, return posts of all types.'
    post:
      summary: Add a new post
      tags:
        - posts
      operationId: create_post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of this post.
                task_owner_id:
                  type: string
                  deprecated: true
                post_type_id:
                  type: string
                  description: Unique identifier of the post type for this post.
                description:
                  type: string
                  description: Description of this post.
                size:
                  type: string
                  description: T-shirt size of this post.
                  enum:
                    - S
                    - M
                    - L
                target_date:
                  type: string
                  description: 'Target date for the completion of work described in this post, in ISO 8601 format.'
                expiration_date:
                  type: string
                  description: ISO 8601 formatted Date on which this post expires if no candidate is selected.
                language:
                  type: string
                  description: Language for this post.
                location_id:
                  type: string
                  description: Unique identifier of the location for this post.
                people_needed:
                  type: integer
                  description: Number of people needed for this post.
                required_skills:
                  type: array
                  description: Must-have skills for this post.
                  items:
                    $ref: '#/components/schemas/SkillWithLevel'
                desired_skills:
                  type: array
                  description: Nice-to-have skills for this post.
                  items:
                    $ref: '#/components/schemas/Skill'
                candidate_description:
                  type: string
                  description: Description of an ideal candidate for this post.
              required:
                - name
                - post_type_id
                - size
                - target_date
                - language
                - location_id
                - people_needed
  '/posts/{post_id}':
    parameters:
      - schema:
          type: string
        name: post_id
        in: path
        required: true
    get:
      summary: Get details of a post
      tags:
        - posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
      operationId: get_post
      security:
        - AWSCognitoCanvaraPrototype: []
    put:
      summary: Update details of a post
      tags:
        - posts
      operationId: update_post
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_owner_id:
                  type: string
                  deprecated: true
                name:
                  type: string
                  description: Name of this post.
                post_type_id:
                  type: string
                  description: Unique identifier of the post type for this post.
                status:
                  type: string
                  description: Current status of this post.
                description:
                  type: string
                  description: Description of this post.
                size:
                  type: string
                  description: T-shirt size of this post.
                  enum:
                    - S
                    - M
                    - L
                target_date:
                  type: string
                  description: 'Target date for the completion of work described in this post, in ISO 8601 format.'
                expiration_date:
                  type: string
                  description: ISO 8601 formatted Date on which this post expires if no candidate is selected.
                language:
                  type: string
                  description: Language for this post.
                location_id:
                  type: string
                  description: Unique identifier of the location for this post.
                people_needed:
                  type: integer
                  description: Number of people needed for this post.
                required_skills:
                  type: array
                  description: Must-have skills for this post.
                  items:
                    $ref: '#/components/schemas/SkillWithLevel'
                desired_skills:
                  type: array
                  description: Nice-to-have skills for this post.
                  items:
                    $ref: '#/components/schemas/Skill'
                candidate_description:
                  type: string
                  description: Description of an ideal candidate for this post.
    delete:
      summary: Delete a post
      tags:
        - posts
      operationId: delete_post
      responses:
        '200':
          description: OK
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
      security:
        - AWSCognitoCanvaraPrototype: []
  '/posts/{post_id}/applications':
    get:
      summary: List all applications for a post
      tags:
        - applications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
      operationId: list_applications_by_post
      security:
        - AWSCognitoCanvaraPrototype: []
    post:
      summary: Add a new application for a post
      operationId: create_application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
      tags:
        - applications
    parameters:
      - schema:
          type: string
        name: post_id
        in: path
        required: true
  '/posts/{post_id}/video':
    parameters:
      - schema:
          type: string
        name: post_id
        in: path
        required: true
    put:
      summary: Create request for a post video upload
      operationId: upload_post_video
      responses:
        '200':
          description: OK
      tags:
        - posts
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: Name of the file being uploaded.
                content_type:
                  type: string
                upload_id:
                  type: string
                status:
                  type: string
  '/posts/{post_id}/video/{upload_id}':
    parameters:
      - schema:
          type: string
        name: post_id
        in: path
        required: true
        description: Unique identifier of the post
      - schema:
          type: string
        name: upload_id
        in: path
        required: true
        description: Unique identifier of the file upload
    put:
      summary: Finalize post video upload
      operationId: finalize_post_video_upload
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
      tags:
        - posts
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
              required:
                - status
  /applications:
    get:
      summary: List all applications
      tags:
        - applications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
      operationId: list_applications_by_applicant
      security:
        - AWSCognitoCanvaraPrototype: []
  '/applications/{application_id}':
    parameters:
      - schema:
          type: string
        name: application_id
        in: path
        required: true
    get:
      summary: Get details of an application
      tags:
        - applications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      operationId: get_application
      security:
        - AWSCognitoCanvaraPrototype: []
    put:
      summary: Update details of an application
      operationId: update_application
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
      tags:
        - applications
    delete:
      summary: Delete an application
      operationId: delete_application
      responses:
        '200':
          description: OK
      security:
        - AWSCognitoCanvaraPrototype: []
      tags:
        - applications
  '/users/{user_id}':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    get:
      summary: Get user details
      tags:
        - users
      operationId: get_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - AWSCognitoCanvaraPrototype: []
    put:
      summary: Update details of a user
      tags:
        - users
      operationId: update_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                title:
                  type: string
                profile_picture_url:
                  type: string
                current_skills:
                  type: array
                  items:
                    $ref: '#/components/schemas/SkillWithLevel'
                desired_skills:
                  type: array
                  items:
                    $ref: '#/components/schemas/Skill'
                linkedin_url:
                  type: string
  /users/me:
    get:
      summary: Get details of the current authenticated user
      tags:
        - users
      operationId: get_current_user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - AWSCognitoCanvaraPrototype: []
  /onboarding/product_preferences:
    get:
      summary: List all products that user can select
      tags:
        - onboarding
      operationId: list_products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductPreference'
      security:
        - AWSCognitoCanvaraPrototype: []
    post:
      summary: Set product preferences during onboarding
      tags:
        - onboarding
      operationId: set_product_preferences
      responses:
        '204':
          description: No Content
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProductPreference'
  /onboarding/current_skills:
    post:
      summary: Set current skills during onboarding
      tags:
        - onboarding
      operationId: set_current_skills
      responses:
        '204':
          description: No Content
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SkillWithLevel'
  /onboarding/desired_skills:
    post:
      summary: Set desired skills during onboarding
      tags:
        - onboarding
      operationId: set_desired_skills
      responses:
        '204':
          description: No Content
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
  /onboarding/linkedin:
    post:
      summary: Set LinkedIn profile url during onboarding
      tags:
        - onboarding
      responses:
        '204':
          description: No Content
      operationId: set_linkedin_url
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                linkedin_url:
                  type: string
              required:
                - linkedin_url
  /skills:
    get:
      summary: Search skills
      tags:
        - onboarding
      operationId: search_skills
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
      security:
        - AWSCognitoCanvaraPrototype: []
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: The search query
  /post_types:
    get:
      summary: List all post types available to user
      tags:
        - posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostType'
      operationId: list_post_types
      security:
        - AWSCognitoCanvaraPrototype: []
  /locations:
    get:
      summary: List all post locations available to user
      tags:
        - posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
      operationId: list_locations
      security:
        - AWSCognitoCanvaraPrototype: []
  /languages:
    get:
      summary: List all post languages available to user
      tags:
        - posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: list_languages
      security:
        - AWSCognitoCanvaraPrototype: []
  /matches:
    post:
      summary: Add a new match between a user and a post
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPostMatch'
      operationId: create_match
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                post_id:
                  type: string
                match_level:
                  type: integer
              required:
                - user_id
                - post_id
                - match_level
      tags:
        - matches
    get:
      summary: List all matches based on given criteria
      operationId: list_matches
      responses:
        '200':
          description: OK
      security:
        - AWSCognitoCanvaraPrototype: []
      parameters:
        - schema:
            type: string
          in: query
          name: user_id
        - schema:
            type: string
          in: query
          name: post_id
      tags:
        - matches
  '/matches/{match_id}':
    parameters:
      - schema:
          type: string
        name: match_id
        in: path
        required: true
    get:
      summary: Get details of a match
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPostMatch'
      operationId: get_match
      security:
        - AWSCognitoCanvaraPrototype: []
      parameters: []
      tags:
        - matches
    put:
      summary: Update details of a match
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPostMatch'
      operationId: update_match
      security:
        - AWSCognitoCanvaraPrototype: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                match_level:
                  type: integer
              required:
                - match_level
      tags:
        - matches
    delete:
      summary: Delete a match
      responses:
        '204':
          description: No Content
      operationId: delete_match
      security:
        - AWSCognitoCanvaraPrototype: []
      tags:
        - matches
components:
  schemas:
    Customer:
      title: Customer
      type: object
      x-examples: {}
      properties:
        customer_id:
          type: string
        name:
          type: string
      required:
        - customer_id
        - name
    User:
      title: User
      type: object
      properties:
        customer_id:
          type: string
        user_id:
          type: string
        name:
          type: string
        title:
          type: string
        profile_picture_url:
          type: string
        customer_name:
          type: string
        product_preferences:
          type: array
          items:
            $ref: '#/components/schemas/ProductPreference'
        current_skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillWithLevel'
        desired_skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        linkedin_url:
          type: string
      required:
        - customer_id
        - user_id
        - name
    Post:
      title: Post
      type: object
      description: ''
      properties:
        customer_id:
          type: string
          deprecated: true
          description: Unique identifier of the customer to which this post belongs.
        post_id:
          type: string
          description: Unique identifier for this post.
        post_owner_id:
          type: string
          deprecated: true
          description: Unique identifier of the owner of this post.
        post_owner:
          type: object
          description: Information about the owner of this post.
          required:
            - user_id
            - name
          properties:
            user_id:
              type: string
              description: Unique identifier for the user.
            name:
              type: string
              description: Name of the user.
            profile_picture_url:
              type: string
              description: The URL of user's profile picture.
        task_owner_id:
          type: string
          deprecated: true
        post_type:
          $ref: '#/components/schemas/PostType'
        name:
          type: string
          description: Name of this post.
        status:
          type: string
          description: Current status of this post.
        summary:
          type: string
          deprecated: true
          description: Name of this post.
        description:
          type: string
          description: Description of this post.
        video_url:
          type: string
          description: The URL of video description for this post.
        size:
          type: string
          description: T-shirt size of this post.
          enum:
            - S
            - M
            - L
        location:
          $ref: '#/components/schemas/Location'
        people_needed:
          type: integer
          description: Number of people needed for this post.
        language:
          type: string
          description: Language for this post.
        required_skills:
          type: array
          description: Must-have skills for this post.
          items:
            $ref: '#/components/schemas/SkillWithLevel'
        desired_skills:
          type: array
          description: Nice-to-have skills for this post.
          items:
            $ref: '#/components/schemas/Skill'
        candidate_description:
          type: string
          description: Description of an ideal candidate for this post.
        match_level:
          type: number
          description: A number between 0 and 100 indicating how close of a match this post is for the current user. Returned only for active posts and if the current user is not the post owner.
        target_date:
          type: string
          description: 'Target date for the completion of work described in this post, in ISO 8601 format.'
        expiration_date:
          type: string
          description: ISO 8601 formatted Date on which this post expires if no candidate is selected.
        created_at:
          type: string
          description: 'Date and time when this post was created, in ISO 8601 format.'
        last_updated_at:
          type: string
          description: 'Date and time when this post was last updated, in ISO 8601 format.'
      required:
        - post_id
        - post_owner
        - post_type
        - name
        - status
        - size
        - location
        - people_needed
        - language
        - target_date
    Application:
      title: Application
      type: object
      properties:
        post_id:
          type: string
        applicant_id:
          type: string
        application_id:
          type: string
        description:
          type: string
    Skill:
      title: Skill
      type: object
      properties:
        skill_id:
          type: string
        name:
          type: string
    SkillWithLevel:
      title: SkillWithLevel
      allOf:
        - $ref: '#/components/schemas/Skill'
        - type: object
          properties:
            level:
              type: integer
    ProductPreference:
      title: ProductPreference
      type: object
      properties:
        product_id:
          type: string
        name:
          type: string
      required:
        - product_id
        - name
    Location:
      title: Location
      type: object
      properties:
        location_id:
          type: string
          description: Unique identifier for this location.
        name:
          type: string
          description: Name of this location.
      required:
        - location_id
        - name
    PostType:
      title: PostType
      type: object
      properties:
        post_type_id:
          type: string
        name:
          type: string
      required:
        - post_type_id
        - name
    UserPostMatch:
      title: UserPostMatch
      type: object
      properties:
        match_id:
          type: string
        user_id:
          type: string
        post_id:
          type: string
        match_level:
          type: string
      required:
        - match_id
        - user_id
        - post_id
        - match_level
  securitySchemes:
    AWSCognitoCanvaraPrototype:
      type: http
      scheme: bearer
