# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit Test CICD Pipeline

on:
  pull_request:
    branches: [ main ]
    paths-ignore: '.github/**'

env:
    REGISTRY: ghcr.io
    VERSION: master
    IMAGE_NAME: ${{ github.repository }}
    IMAGE_ID: $REGISTRY/$IMAGE_NAME

jobs:
  checkout:

    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:        
      - name: slack message notification for the start of the pull request job
        uses: docker://technosophos/slack-notify
        if: github.event_name == 'pull_request'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Backend workflow triggered by "${{ github.event.pull_request.user.login }}" for PR number "${{ github.event.pull_request.number }}" with pull_request_url "${{ github.event.pull_request.html_url }}"

      
      - name: slack message notification for the start of the push job
        uses: docker://technosophos/slack-notify
        if: github.event_name == 'push'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Backend workflow triggered by "${{ github.event.commits[0].author.name }}" for the changes "${{ github.event.commits[0].message }}" commit_url "${{ github.event.commits[0].url }}"

      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('pip_requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f pip_requirements.txt ]; then pip install -r pip_requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pylint
        run: |
          if [ -f pip_test_requirements.txt ]; then pip install -r pip_test_requirements.txt; fi
          pylint --rcfile .pylintrc src/backend
      - name: Set environment variables
        run: |
          echo "PYTHONPATH=${{ github.workspace }}/src" >> $GITHUB_ENV
      - name: Unit Test with pytest
        run: |
          pytest
      - name: slack message notification on failure
        if: failure()
        uses: docker://technosophos/slack-notify
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Backend code checkout & UT FAILED!!
          
      - name: slack message notification
        uses: docker://technosophos/slack-notify
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: Backend code checkout & UT Successful!!
